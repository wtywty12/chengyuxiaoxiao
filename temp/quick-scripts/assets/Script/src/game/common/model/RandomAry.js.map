{"version":3,"sources":["RandomAry.js"],"names":["Object","defineProperty","exports","value","ConfigManager_1","require","Tools_1","RandomAry","need","needValus","configLength","jsonData","Map","produceArray","randomIdiom","ConfigManager","idiomJsonMap","Tools","getMapLength","init","prototype","cc","log","randomAry","getRandomAry","getRandomAryIdiom","getSplitArray","getRandomIdiom","getProduceArray","i","rand","Math","trunc","random","isOk","j","length","push","arr","idiomAry","v","s","toString","get","substring","produceLength","floor","temp","resetRandomAry"],"mappings":"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","file":"RandomAry.js","sourceRoot":"../../../../../../../../assets/Script/src/game/common/model","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ConfigManager_1 = require(\"./../ConfigManager\");\nvar Tools_1 = require(\"src/utils/Tools\");\nvar RandomAry = (function () {\n    function RandomAry(need) {\n        this.needValus = null;\n        this.configLength = null;\n        this.jsonData = new Map();\n        this.produceArray = null;\n        this.randomIdiom = null;\n        this.needValus = need;\n        this.jsonData = ConfigManager_1.ConfigManager.idiomJsonMap;\n        this.produceArray = [];\n        this.configLength = Tools_1.Tools.getMapLength(this.jsonData);\n        this.init();\n    }\n    RandomAry.prototype.init = function () {\n        if (this.configLength <= 0) {\n            cc.log(\"json读取失败\");\n            return;\n        }\n        var randomAry = this.getRandomAry();\n        this.randomIdiom = this.getRandomAryIdiom(randomAry);\n        this.produceArray = this.getSplitArray(this.randomIdiom);\n    };\n    RandomAry.prototype.getRandomIdiom = function () {\n        return this.randomIdiom;\n    };\n    RandomAry.prototype.getProduceArray = function () {\n        return this.produceArray;\n    };\n    RandomAry.prototype.getRandomAry = function () {\n        var randomAry = [];\n        for (var i = 0; i < this.needValus; i++) {\n            var rand = Math.trunc(Math.random() * this.configLength);\n            var isOk = true;\n            for (var j = 0; j < randomAry.length; j++) {\n                if (randomAry[j] == rand) {\n                    isOk = false;\n                    break;\n                }\n            }\n            if (isOk) {\n                randomAry.push(rand);\n            }\n        }\n        return randomAry;\n    };\n    RandomAry.prototype.getRandomAryIdiom = function (arr) {\n        var idiomAry = [];\n        for (var i = 0; i < arr.length; i++) {\n            var v = arr[i];\n            var s = v.toString();\n            idiomAry.push(this.jsonData.get(v));\n        }\n        cc.log(\"关卡成语   =>    \", idiomAry);\n        return idiomAry;\n    };\n    RandomAry.prototype.getSplitArray = function (arr) {\n        var produceArray = [];\n        for (var i = 0; i < arr.length; i++) {\n            var v = arr[i];\n            for (var j = 0; j < v.length; j++) {\n                var s = v.substring(j, j + 1);\n                produceArray.push(s);\n            }\n        }\n        var produceLength = produceArray.length;\n        for (var i = 0; i < produceLength; i++) {\n            var rand = Math.floor(Math.random() * produceLength);\n            if (i != rand) {\n                var temp = produceArray[i];\n                produceArray[i] = produceArray[rand];\n                produceArray[rand] = temp;\n            }\n        }\n        return produceArray;\n    };\n    RandomAry.prototype.resetRandomAry = function () {\n        this.randomIdiom = [];\n        this.produceArray = [];\n        this.init();\n    };\n    return RandomAry;\n}());\nexports.RandomAry = RandomAry;\n"]}