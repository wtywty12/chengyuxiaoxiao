{"version":3,"sources":["GameResult.js"],"names":["Object","defineProperty","exports","value","Tools_1","require","GameManager_1","RecordGrid_1","GameDataManager_1","GameResultClass","randomAry","gameTable","chooseView","gameScene","get","_instance","enumerable","configurable","prototype","setView","setGameScene","scene","startResult","idiomAry","cc","log","chooseMap","RecordGrid","getChooseGridMap","isSussess","i","length","idiom","isEqual","j","substring","getGridString","playChooseFadeOut","cb1","callFunc","onSuccessFul","node","runAction","sequence","delayTime","GameDataManager","gameData","gridEffectTime","onFailed","clearData","playChooseFadeIn","addscore","setScore","score","toString","Tools","getMapLength","getGameTableGridMap","tableWidth","tableHeight","gametime","totalGameTime","GameManager","onGameLevelup","restoreIdiom","clearRecordData","clearChooseGrid","GameResult","instance"],"mappings":"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","file":"GameResult.js","sourceRoot":"../../../../../../../assets/Script/src/game/game","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Tools_1 = require(\"../../utils/Tools\");\nvar GameManager_1 = require(\"./GameManager\");\nvar RecordGrid_1 = require(\"../common/model/RecordGrid\");\nvar GameDataManager_1 = require(\"../common/data/GameDataManager\");\nvar GameResultClass = (function () {\n    function GameResultClass() {\n        this.randomAry = null;\n        this.gameTable = null;\n        this.chooseView = null;\n        this.gameScene = null;\n    }\n    Object.defineProperty(GameResultClass, \"instance\", {\n        get: function () {\n            if (this._instance == null) {\n                this._instance = new GameResultClass();\n            }\n            return this._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GameResultClass.prototype.setView = function (gameTable, chooseView) {\n        this.gameTable = gameTable;\n        this.chooseView = chooseView;\n    };\n    GameResultClass.prototype.setGameScene = function (scene) {\n        this.gameScene = scene;\n    };\n    GameResultClass.prototype.startResult = function (idiomAry) {\n        cc.log(\"开始判定\");\n        var chooseMap = RecordGrid_1.RecordGrid.getChooseGridMap();\n        var isSussess = false;\n        for (var i = 0; i < idiomAry.length; i++) {\n            var idiom = idiomAry[i];\n            var isEqual = true;\n            for (var j = 0; j < 4; j++) {\n                if (idiom.substring(j, j + 1) != chooseMap.get(j).getGridString()) {\n                    isEqual = false;\n                    break;\n                }\n            }\n            if (isEqual) {\n                isSussess = true;\n                break;\n            }\n        }\n        if (isSussess) {\n            this.chooseView.playChooseFadeOut();\n            var cb1 = cc.callFunc(this.onSuccessFul, this);\n            this.gameTable.node.runAction(cc.sequence(cc.delayTime(GameDataManager_1.GameDataManager.gameData.gridEffectTime), cb1));\n        }\n        else {\n            this.onFailed();\n        }\n    };\n    GameResultClass.prototype.onSuccessFul = function () {\n        cc.log(\"判定成功\");\n        this.clearData();\n        this.chooseView.playChooseFadeIn();\n        GameDataManager_1.GameDataManager.gameData.addscore(4);\n        this.gameScene.setScore(GameDataManager_1.GameDataManager.gameData.score.toString());\n        if (Tools_1.Tools.getMapLength(RecordGrid_1.RecordGrid.getGameTableGridMap()) == this.gameTable.tableWidth * this.gameTable.tableHeight) {\n            GameDataManager_1.GameDataManager.gameData.gametime = GameDataManager_1.GameDataManager.gameData.totalGameTime;\n            GameManager_1.GameManager.onGameLevelup();\n        }\n        else {\n            GameDataManager_1.GameDataManager.gameData.gametime = GameDataManager_1.GameDataManager.gameData.gametime + 2;\n        }\n    };\n    GameResultClass.prototype.onFailed = function () {\n        cc.log(\"判定失败\");\n        this.chooseView.restoreIdiom();\n        this.clearData();\n    };\n    GameResultClass.prototype.clearData = function () {\n        RecordGrid_1.RecordGrid.clearRecordData();\n        this.chooseView.clearChooseGrid();\n    };\n    return GameResultClass;\n}());\nexports.GameResult = GameResultClass.instance;\n"]}